{
 "kind": "discovery#restDescription",
 "discoveryVersion": "v1",
 "id": "orvos:v1",
 "name": "orvos",
 "version": "v1",
 "revision": "20130226",
 "title": "Orvos API",
 "description": "The API to interact with Orvos.",
 "documentationLink": "https://redmine.clinicalfuture.com/projects/orvos/",
 "protocol": "rest",
 "baseUrl": "https://api.clinicalfuture.com:3000/orvos/v1/",
 "basePath": "/orvos/v1/",
 "rootUrl": "https://api.clinicalfuture.com:3000/",
 "servicePath": "orvos/v1/",
 "batchPath": "batch",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
   "location": "query"
  }
 },
 "auth": {
  "oauth2": {
   "scopes": {
    "https://api.clinicalfuture.com/auth/orvos": {
     "description": "View and manage the objects in your Orvos"
    },
    "https://api.clinicalfuture.com/auth/orvos.readonly": {
     "description": "View the objects in your Orvos"
    }
   }
  }
 },
 "schemas": {
  "About": {
   "id": "About",
   "type": "object",
   "description": "An item with user information and settings.",
   "properties": {
    "additionalRoleInfo": {
     "type": "array",
     "description": "Information about supported additional roles per file type. The most specific type takes precedence.",
     "items": {
      "type": "object",
      "properties": {
       "roleSets": {
        "type": "array",
        "description": "The supported additional roles per primary role.",
        "items": {
         "type": "object",
         "properties": {
          "additionalRoles": {
           "type": "array",
           "description": "The supported additional roles with the primary role.",
           "items": {
            "type": "string"
           }
          },
          "primaryRole": {
           "type": "string",
           "description": "A primary permission role."
          }
         }
        }
       },
       "type": {
        "type": "string",
        "description": "The content type that this additional role info applies to."
       }
      }
     }
    },
    "etag": {
     "type": "string",
     "description": "The ETag of the item."
    },
    "kind": {
     "type": "string",
     "description": "This is always orvos#about.",
     "default": "orvos#about"
    },
    "largestChangeId": {
     "type": "string",
     "description": "The largest change id.",
     "format": "int64"
    },
    "name": {
     "type": "string",
     "description": "The name of the current user."
    },
    "permissionId": {
     "type": "string",
     "description": "The current user's ID as visible in the permissions collection."
    },
    "quotaBytesTotal": {
     "type": "string",
     "description": "The total number of quota bytes.",
     "format": "int64"
    },
    "quotaBytesUsed": {
     "type": "string",
     "description": "The number of quota bytes used.",
     "format": "int64"
    },
    "remainingChangeIds": {
     "type": "string",
     "description": "The number of remaining change ids.",
     "format": "int64"
    },
    "rootFolderId": {
     "type": "string",
     "description": "The id of the root folder."
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this item."
    },
    "user": {
     "$ref": "User",
     "description": "The authenticated user."
    }
   }
  },
  "Collection": {
   "id": "Collection",
   "type": "object",
   "description": "A collection of data files.",
   "properties": {
    "kind": {
     "type": "string",
     "description": "The type of collection. This is always orvos#collection.",
     "default": "orvos#collection"
    },
    "id": {
     "type": "string",
     "description": "The id of the collection."
    },
    "etag": {
     "type": "string",
     "description": "ETag of the collection."
    },
    "locator": {
     "type": "string",
     "description": "CAS locator for the data in the collection."
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this collection."
    },
    "createdByClient": {
     "type": "string",
     "description": "ID of the API client that created the collection."
    },
    "createdByUser": {
     "type": "string",
     "description": "ID of the user who created the collection."
    },
    "createdAt": {
     "type": "string",
     "description": "Create time for this collection (formatted RFC 3339 timestamp).",
     "format": "date-time"
    },
    "modifiedByClient": {
     "type": "string",
     "description": "ID of the API client that last modified the collection."
    },
    "modifiedByUser": {
     "type": "string",
     "description": "ID of the user who last modified the collection."
    },
    "modifiedAt": {
     "type": "string",
     "description": "Modification time for this collection (formatted RFC 3339 timestamp).",
     "format": "date-time"
    },
    "portableDataHash": {
     "type": "string",
     "description": "Relocatable hash of content only."
    },
    "name": {
     "type": "string",
     "description": "Name of the collection."
    },
    "redundancy": {
     "type": "integer",
     "description": "Desired replication level."
    },
    "redundancyConfirmedByClient": {
     "type": "string",
     "description": "ID of the API client that last verified redundancy level."
    },
    "redundancyConfirmedAt": {
     "type": "string",
     "description": "Time when replication level was last verified (formatted RFC 3339 timestamp)."
    },
    "redundancyConfirmedAs": {
     "type": "integer",
     "description": "Most recently verified replication level."
    }
   }
  },
  "CollectionList": {
   "id": "CollectionList",
   "type": "object",
   "description": "A list of collections.",
   "properties": {
    "etag": {
     "type": "string",
     "description": "The ETag of the list."
    },
    "items": {
     "type": "array",
     "description": "The actual list of collections.",
     "items": {
      "$ref": "Collection"
     }
    },
    "kind": {
     "type": "string",
     "description": "This is always orvos#collectionList.",
     "default": "orvos#collectionList"
    },
    "nextLink": {
     "type": "string",
     "description": "A link to the next page of collections."
    },
    "nextPageToken": {
     "type": "string",
     "description": "The page token for the next page of collections."
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this list."
    }
   }
  },
  "Link": {
   "id": "Link",
   "type": "object",
   "description": "A link object.",
   "properties": {
    "kind": {
     "type": "string",
     "description": "The type of link. This is always orvos#link.",
     "default": "orvos#link"
    },
    "id": {
     "type": "string",
     "description": "The id of the link."
    },
    "etag": {
     "type": "string",
     "description": "ETag of the link."
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this link."
    },
    "createdByClient": {
     "type": "string",
     "description": "ID of the API client that created the collection."
    },
    "createdByUser": {
     "type": "string",
     "description": "ID of the user who created the collection."
    },
    "createdAt": {
     "type": "string",
     "description": "Create time for this link (formatted RFC 3339 timestamp).",
     "format": "date-time"
    },
    "modifiedByClient": {
     "type": "string",
     "description": "ID of the API client that last modified the link."
    },
    "modifiedByUser": {
     "type": "string",
     "description": "ID of the user who last modified the link."
    },
    "modifiedAt": {
     "type": "string",
     "description": "Modification time for this link (formatted RFC 3339 timestamp).",
     "format": "date-time"
    },
    "name": {
     "type": "string",
     "description": "Name of the link."
    },
    "linkClass": {
     "type": "string",
     "description": "Class of the link."
    },
    "properties": {
     "type": "string",
     "description": "Properties of the link."
    },
    "headUuid": {
     "type": "string",
     "description": "ID of the 'head' of the link."
    },
    "headKind": {
     "type": "string",
     "description": "Object type of the 'head' of the link."
    },
    "tailUuid": {
     "type": "string",
     "description": "ID of the 'tail' of the link."
    },
    "tailKind": {
     "type": "string",
     "description": "Object type of the 'tail' of the link."
    }
   }
  },
  "LinkList": {
   "id": "LinkList",
   "type": "object",
   "description": "A list of links.",
   "properties": {
    "etag": {
     "type": "string",
     "description": "The ETag of the list."
    },
    "items": {
     "type": "array",
     "description": "The actual list of links.",
     "items": {
      "$ref": "Link"
     }
    },
    "kind": {
     "type": "string",
     "description": "This is always orvos#linkList.",
     "default": "orvos#linkList"
    },
    "nextLink": {
     "type": "string",
     "description": "A link to the next page of links."
    },
    "nextPageToken": {
     "type": "string",
     "description": "The page token for the next page of links."
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this list."
    }
   }
  },
  "User": {
   "id": "User",
   "type": "object",
   "description": "The JSON template for a user.",
   "properties": {
    "displayName": {
     "type": "string",
     "description": "A plain text displayable name for this user."
    },
    "isAuthenticatedUser": {
     "type": "boolean",
     "description": "Whether this user is the same as the authenticated user of which the request was made on behalf."
    },
    "kind": {
     "type": "string",
     "description": "This is always orvos#user.",
     "default": "orvos#user"
    }
   }
  }
 },
 "resources": {
  "about": {
   "methods": {
    "get": {
     "id": "orvos.about.get",
     "path": "about",
     "httpMethod": "GET",
     "description": "Gets the information about the current user along with Orvos API settings",
     "parameters": {
      "includeSubscribed": {
       "type": "boolean",
       "description": "Whether to include subscribed items when calculating the number of remaining change IDs",
       "default": "true",
       "location": "query"
      },
      "maxChangeIdCount": {
       "type": "string",
       "description": "Maximum number of remaining change IDs to count",
       "default": "1",
       "format": "int64",
       "location": "query"
      },
      "startChangeId": {
       "type": "string",
       "description": "Change ID to start counting from when calculating number of remaining change IDs",
       "format": "int64",
       "location": "query"
      }
     },
     "response": {
      "$ref": "About"
     },
     "scopes": [
      "https://api.clinicalfuture.com/auth/orvos",
      "https://api.clinicalfuture.com/auth/orvos.readonly"
     ]
    }
   }
  },
  "collections": {
   "methods": {
    "get": {
     "id": "orvos.collections.get",
     "path": "collections/{collectionId}",
     "httpMethod": "GET",
     "description": "Gets a collection's metadata by ID.",
     "parameters": {
      "collectionId": {
       "type": "string",
       "description": "The ID for the collection in question.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "collectionId"
     ],
     "response": {
      "$ref": "Collection"
     },
     "scopes": [
      "https://api.clinicalfuture.com/auth/orvos",
      "https://api.clinicalfuture.com/auth/orvos.readonly"
     ]
    },
    "list": {
     "id": "orvos.collections.list",
     "path": "collections",
     "httpMethod": "GET",
     "description": "Lists the user's collections.",
     "parameters": {
      "limit": {
       "type": "integer",
       "description": "Maximum number of collections to return.",
       "default": "100",
       "format": "int32",
       "minimum": "0",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "description": "Page token for collections.",
       "location": "query"
      },
      "q": {
       "type": "string",
       "description": "Query string for searching collections.",
       "location": "query"
      }
     },
     "response": {
      "$ref": "CollectionList"
     },
     "scopes": [
      "https://api.clinicalfuture.com/auth/orvos",
      "https://api.clinicalfuture.com/auth/orvos.readonly"
     ]
    }
   }
  },
  "links": {
   "methods": {
    "get": {
     "id": "orvos.links.get",
     "path": "links/{linkId}",
     "httpMethod": "GET",
     "description": "Gets a link's metadata by ID.",
     "parameters": {
      "linkId": {
       "type": "string",
       "description": "The ID for the link in question.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "linkId"
     ],
     "response": {
      "$ref": "Link"
     },
     "scopes": [
      "https://api.clinicalfuture.com/auth/orvos",
      "https://api.clinicalfuture.com/auth/orvos.readonly"
     ]
    },
    "list": {
     "id": "orvos.links.list",
     "path": "links",
     "httpMethod": "GET",
     "description": "Lists the user's links.",
     "parameters": {
      "limit": {
       "type": "integer",
       "description": "Maximum number of links to return.",
       "default": "100",
       "format": "int32",
       "minimum": "0",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "description": "Page token for links.",
       "location": "query"
      },
      "q": {
       "type": "string",
       "description": "Query string for searching links.",
       "location": "query"
      }
     },
     "response": {
      "$ref": "linkList"
     },
     "scopes": [
      "https://api.clinicalfuture.com/auth/orvos",
      "https://api.clinicalfuture.com/auth/orvos.readonly"
     ]
    }
   }
  },
  "nodes": {
    "methods": {
      "create": {
       "id": "orvos.nodes.create",
       "path": "nodes",
       "httpMethod": "POST",
       "parameters": {
       }
      },
      "get": {
        "id": "orvos.nodes.get",
        "path": "nodes/{nodeId}",
        "httpMethod": "GET",
        "parameters": {
          "uuid": {
            "type": "string"
          }
        }
      }
    }
  }
 }
}
