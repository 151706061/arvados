---
layout: default
navsection: installguide
title: Install Keepstore servers
...

We are going to install two Keepstore servers. By convention, we use the following hostname pattern:

<div class="offset1">
table(table table-bordered table-condensed).
|_Hostname_|
|keep0.@uuid_prefix@.your.domain|
|keep1.@uuid_prefix@.your.domain|
</div>

Because the Keepstore servers are not directly accessible from the internet, these hostnames only need to resolve on the local network.

h2. Install Keepstore

On Debian-based systems:

<notextile>
<pre><code>~$ <span class="userinput">sudo apt-get install keepstore</span>
</code></pre>
</notextile>

On Red Hat-based systems:

<notextile>
<pre><code>~$ <span class="userinput">sudo yum install keepstore</span>
</code></pre>
</notextile>

Verify that Keepstore is functional:

<notextile>
<pre><code>~$ <span class="userinput">keepstore -h</span>
2015/05/08 13:41:16 keepstore starting, pid 2565
Usage of ./keepstore:
  -azure-storage-account-key-file="": File containing the account key used for subsequent --azure-storage-container-volume arguments.
  -azure-storage-account-name="": Azure storage account name used for subsequent --azure-storage-container-volume arguments.
  -azure-storage-container-volume=[]: Use the given container as a storage volume. Can be given multiple times.
  -azure-storage-replication=3: Replication level to report to clients when data is stored in an Azure container.
  -blob-signature-ttl=1209600: Lifetime of blob permission signatures. This will become a part of the signing key, and will cause clients to retry or fail if changed while they are in progress. See services/api/config/application.default.yml.
  -blob-signing-key-file="": File containing the secret key for generating and verifying blob permission signatures.
  -data-manager-token-file="": File with the API token used by the Data Manager. All DELETE requests or GET /index requests must carry this token.
  -enforce-permissions=false: Enforce permission signatures on requests.
  -listen=":25107": Listening address, in the form "host:port". e.g., 10.0.1.24:8000. Omit the host part to listen on all interfaces.
  -max-buffers=128: Maximum RAM to use for data buffers, given in multiples of block size (64 MiB). When this limit is reached, HTTP requests requiring buffers (like GET and PUT) will wait for buffer space to be released.
  -never-delete=false: If set, nothing will be deleted. HTTP 405 will be returned for valid DELETE requests.
  -permission-key-file="": Synonym for -blob-signing-key-file.
  -permission-ttl=0: Synonym for -blob-signature-ttl.
  -pid="": Path to write pid file during startup. This file is kept open and locked with LOCK_EX until keepstore exits, so `fuser -k pidfile` is one way to shut down. Exit immediately if there is an error opening, locking, or writing the pid file.
  -readonly=false: Do not write, delete, or touch anything on the following volumes.
  -serialize=false: Serialize read and write operations on the following volumes.
  -volume=[]: Local storage directory. Can be given more than once to add multiple directories. If none are supplied, the default is to use all directories named "keep" that exist in the top level directory of a mount point at startup time. Can be a comma-separated list, but this is deprecated: use multiple -volume arguments instead.
  -volumes=[]: Deprecated synonym for -volume.
</code></pre>
</notextile>

h3. Prepare storage volumes

{% include 'notebox_begin' %}
This section uses a local filesystem as a backing store. If you are using Azure Storage, follow the setup instructions on the "Azure Blob Storage":configure-azure-blob-storage.html page instead.
{% include 'notebox_end' %}

There are two ways to specify a set of local directories where keepstore should store its data files.
# Implicitly, by creating a directory called @keep@ at the top level of each filesystem you intend to use, and omitting @-volume@ arguments.
# Explicitly, by providing a @-volume@ argument for each directory.

For example, if there are filesystems mounted at @/mnt@ and @/mnt2@:

<notextile>
<pre><code>~$ <span class="userinput">mkdir /mnt/keep /mnt2/keep</span>
~$ <span class="userinput">keepstore</span>
2015/05/08 13:44:26 keepstore starting, pid 2765
2015/05/08 13:44:26 Using volume [UnixVolume /mnt/keep] (writable=true)
2015/05/08 13:44:26 Using volume [UnixVolume /mnt2/keep] (writable=true)
2015/05/08 13:44:26 listening at :25107
</code></pre>
</notextile>

Equivalently:

<notextile>
<pre><code>~$ <span class="userinput">mkdir /mnt/keep /mnt2/keep</span>
~$ <span class="userinput">keepstore -volume=/mnt/keep -volume=/mnt2/keep</span>
2015/05/08 13:44:26 keepstore starting, pid 2765
2015/05/08 13:44:26 Using volume [UnixVolume /mnt/keep] (writable=true)
2015/05/08 13:44:26 Using volume [UnixVolume /mnt2/keep] (writable=true)
2015/05/08 13:44:26 listening at :25107
</code></pre>
</notextile>

h3. Run keepstore as a supervised service

Install runit to supervise the keepstore daemon.  {% include 'install_runit' %}

Install this script as the run script for the keepstore service, modifying it as directed below.

<notextile>
<pre><code>#!/bin/sh

exec 2>&1
exec GOGC=10 GOMAXPROCS=<span class="userinput">4</span> keepstore \
 -enforce-permissions=true \
 -blob-signing-key-file=<span class="userinput">/etc/keepstore/blob-signing.key</span> \
 -max-buffers=<span class="userinput">100</span> \
 -serialize=true \
 -volume=<span class="userinput">/mnt/keep</span> \
 -volume=<span class="userinput">/mnt2/keep</span>
</code></pre>
</notextile>

The @GOMAXPROCS@ environment variable determines the maximum number of concurrent threads, and should normally be set to the number of CPU cores present.

The @-max-buffers@ argument limits keepstore's memory usage. It should be set such that @max-buffers * 64MiB + 10%@ fits comfortably in memory. For example, @-max-buffers=100@ is suitable for a host with 8 GiB RAM.

If you want access control on your Keepstore server(s), you must specify the @-enforce-permissions@ flag and provide a signing key. The @-blob-signing-key-file@ argument should be a file containing a long random alphanumeric string with no internal line breaks (it is also possible to use a socket or FIFO: keepstore reads it only once, at startup). This key must be the same as the @blob_signing_key@ configured in the "API server's":install-api-server.html configuration file, @/etc/arvados/api/application.yml@.

The @-serialize=true@ (default: @false@) argument limits keepstore to one reader/writer process per storage partition. This avoids thrashing by allowing the storage device underneath the storage partition to do read/write operations sequentially. Enabling @-serialize@ can improve Keepstore performance if the storage partitions map 1:1 to physical disks that are dedicated to Keepstore, particularly so for mechanical disks. In some cloud environments, enabling @-serialize@ has also also proven to be beneficial for performance, but YMMV. If your storage partition(s) are backed by network or RAID storage that can handle many simultaneous reader/writer processes without thrashing, you probably do not want to set @-serialize@.

h3. Set up additional servers

Repeat the above sections to prepare volumes and bring up supervised services on each Keepstore server you are setting up.

h3. Tell the API server about the Keepstore servers

The API server needs to be informed about the presence of your Keepstore servers. For each of the Keepstore servers you have created, please execute the following commands on your <strong>shell server</strong>.

Make sure to update the @service_host@ value to match each of your Keepstore servers.

<notextile>
<pre><code>~$ <span class="userinput">prefix=`arv --format=uuid user current | cut -d- -f1`</span>
~$ <span class="userinput">echo "Site prefix is '$prefix'"</span>
~$ <span class="userinput">read -rd $'\000' keepservice &lt;&lt;EOF; arv keep_service create --keep-service "$keepservice"</span>
<span class="userinput">{
 "service_host":"<strong>keep0.$prefix.your.domain</strong>",
 "service_port":25107,
 "service_ssl_flag":false,
 "service_type":"disk"
}
EOF</span>
</code></pre></notextile>
