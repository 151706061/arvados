<% content_for :css do %>

<% end %>

<% template = PipelineTemplate.find(@object.pipeline_template_uuid) rescue nil %>

<%= content_for :content_top do %>
  <h2>
    <%= render_editable_attribute @object, 'name', nil, { 'data-emptytext' => 'Unnamed pipeline', 'data-mode' => 'inline' } %>
  </h2>
  <% if template %>
  <h4>
    From template:
    <%= link_to_if_arvados_object template, friendly_name: true %>
  </h4>
  <% end %>
<% end %>

<% if @object.active != nil %>
<table class="table pipeline-components-table">
  <colgroup>
    <col style="width: 15%" />
    <col style="width: 20%" />
    <col style="width: 12%" />
    <col style="width: 12%" />
    <col style="width: 45%" />
  </colgroup>
  <thead>
    <tr>
      <th>
        component
      </th><th>
        script, version
      </th><th>
        progress
        <%= link_to '(refresh)', request.fullpath, class: 'refresh', remote: true, method: 'get' %>
      </th><th>
      </th><th>
        output
      </th>
    </tr>
  </thead>
  <tbody>
    <% render_pipeline_jobs.each do |pj| %>
    <tr>
      <td>
        <% job_status = render(partial: 'job_status_label',
                               locals: { :j => pj[:job], :title => pj[:name] }) %>
        <% if pj[:job].andand[:uuid] %>
          <%= link_to(job_status, job_url(id: pj[:job][:uuid])) %>
        <% else %>
          <%= job_status %>
        <% end %>
      </td><td>
        <%= pj[:script] %>
        <br /><span class="deemphasize"><%= pj[:script_version] %></span>
      </td><td>
        <%= pj[:progress_bar] %>
      </td><td>
        <%= render(partial: 'job_status_label',
                               locals: { :j => pj[:job] }) %>
      </td><td>
        <%= link_to_if_arvados_object pj[:output], {:thumbnail => true} %>
      </td>
    </tr>
    <% end %>
  </tbody>
  <tfoot>
    <tr><td colspan="5"></td></tr>
  </tfoot>
</table>

<% if @object.active %>
<% content_for :js do %>
setInterval(function(){$('a.refresh').click()}, 15000);
<% end %>

<% content_for :tab_line_buttons do %>
  <%= form_tag @object, :method => :put do |f| %>

    <%= hidden_field @object.class.to_s.underscore.singularize.to_sym, :active, :value => false %>

    <%= button_tag "Stop pipeline", {class: 'btn btn-primary pull-right', id: "run-pipeline-button"} %>
  <% end %>
<% end %>

<% end %>

<% else %>

  <p>Please set the desired input parameters for the components of this pipeline.  Parameters highlighted in red are required.</p>

  <% content_for :tab_line_buttons do %>
    <%= form_tag @object, :method => :put do |f| %>

      <%= hidden_field @object.class.to_s.underscore.singularize.to_sym, :active, :value => true %>

      <%= button_tag "Run pipeline", {class: 'btn btn-primary pull-right', id: "run-pipeline-button"} %>
    <% end %>
  <% end %>

  <%= render partial: 'show_components_editable', locals: {editable: true} %>

<% end %>
