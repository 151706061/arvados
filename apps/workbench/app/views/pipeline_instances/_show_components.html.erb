<% content_for :css do %>
  .pipeline_color_legend {
    padding-left: 1em;
    padding-right: 1em;
  }
table.pipeline-components-table {
  width: 100%;
  table-layout: fixed;
  overflow: hidden;
}

table.pipeline-components-table thead th {
  text-align: bottom;
}
table.pipeline-components-table div.progress {
  margin-bottom: 0;
}

table.pipeline-components-table td {
  overflow: hidden;
  text-overflow: ellipsis;
}

<% end %>

<% if @object.active != nil %>
<table class="table pipeline-components-table">
  <colgroup>
    <col style="width: 15%" />
    <col style="width: 20%" />
    <col style="width: 20%" />
    <col style="width: 45%" />
  </colgroup>
  <thead>
    <tr>
      <th>
        component
      </th><th>
        script, version
      </th><th>
        progress
        <%= link_to '(refresh)', request.fullpath, class: 'refresh', remote: true, method: 'get' %>
      </th><th>
        output
      </th>
    </tr>
  </thead>
  <tbody>
    <% render_pipeline_jobs.each do |pj| %>
    <tr>
      <td>
        <% label = if pj[:job].andand[:uuid] 
                       if pj[:job][:running]
                         'label-info'
                       elsif pj[:job][:success]
                         'label-success'
                       else
                         'label-danger'
                       end 
                     else
                       'label-default'
                     end %>
        <% if pj[:job].andand[:uuid] %>
        <%= link_to pj[:name], job_url(id: pj[:job][:uuid]), class: "label #{label}" %>
        <% else %>
          <span class="label <%= label %>"><%= pj[:name] %></span>
        <% end %>
        </span>
      </td><td>
        <%= pj[:script] %>
        <br /><span class="deemphasize"><%= pj[:script_version] %></span>
      </td><td>
        <%= pj[:progress_bar] %>
        <% if pj[:job].andand[:cancelled_at] %>
        <span class="pull-right label label-warning">cancelled</span>
        <% elsif pj[:failed] %>
        <span class="pull-right label label-warning">failed</span>
        <% elsif pj[:result] == 'queued' %>
        <span class="pull-right label">queued</span>
        <% end %>
      </td><td>
        <%= link_to_if_arvados_object pj[:output] %>
      </td>
    </tr>
    <% end %>
  </tbody>
  <tfoot>
    <tr><td colspan="4"></td></tr>
  </tfoot>
</table>

<% if @object.active %>
<% content_for :js do %>
setInterval(function(){$('a.refresh').click()}, 30000);
<% end %>
<% end %>

<% else %>

  <%= form_tag @object, :method => :put do |f| %>

  <%= hidden_field @object.class.to_s.underscore.singularize.to_sym, :active, :value => true %>
  <%= button_tag "Run pipeline", {class: 'btn btn-primary pull-right'} %>
  <% end %>

<table class="table pipeline-components-table" style="margin-top: -.1em">
  <colgroup>
    <col style="width: 15%" />
    <col style="width: 20%" />
    <col style="width: 20%" />
    <col style="width: 45%" />
  </colgroup>

  <thead>
    <tr>
      <th>
        component
      </th><th>
        script
      </th><th>
        parameter
      </th><th>
        input
      </th>
    </tr>
  </thead>
  <tbody>
    <% template = PipelineTemplate.find(@object.pipeline_template_uuid) %>
    <% template.components.each do |k, v| %>

    <% sp = v[:script_parameters].collect do |x, y| [x, y] end %>

    <tr>
      <td><span class="label label-default"><%= k %></span></td>

      <td><%= v[:script] %></td>

      <td>script_version</td>

      <td>
        <%= render_editable_subattribute @object, :components, [k, :script_version], v[:script_version] %>
      </td>
    </tr>

    <% if sp.length > 0 %>
    <tr>
      <td style="border-top: none"></td>
      <td style="border-top: none"></td>

      <% sp.each do |p| %>
        <td><%= p[0] %></td>
        <td><%= render_editable_subattribute @object, :components, [k, :script_parameters, p[0].to_sym], p[1] %></td>
      <% end %>
    </tr>
  <% end %>
  <% end %>
  </tbody>
  </table>
  
<% end %>
