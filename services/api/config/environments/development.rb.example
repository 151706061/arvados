Server::Application.configure do
  # Settings specified here will take precedence over those in config/application.rb

  # In the development environment your application's code is reloaded on
  # every request.  This slows down response time but is perfect for development
  # since you don't have to restart the web server when you make code changes.
  config.cache_classes = false

  # Log error messages when you accidentally call methods on nil.
  config.whiny_nils = true

  # Show full error reports and disable caching
  config.consider_all_requests_local       = true
  config.action_controller.perform_caching = false

  # Don't care if the mailer can't send
  config.action_mailer.raise_delivery_errors = false
  config.action_mailer.perform_deliveries = false

  # Print deprecation notices to the Rails logger
  config.active_support.deprecation = :log

  # Only use best-standards-support built into browsers
  config.action_dispatch.best_standards_support = :builtin

  # Raise exception on mass assignment protection for Active Record models
  config.active_record.mass_assignment_sanitizer = :strict

  # Log the query plan for queries taking more than this (works
  # with SQLite, MySQL, and PostgreSQL)
  config.active_record.auto_explain_threshold_in_seconds = 0.5

  # Do not compress assets
  config.assets.compress = false

  # Expands the lines which load the assets
  config.assets.debug = true

  config.force_ssl = false

  config.git_repositories_dir = '/var/cache/git'

  config.crunch_job_wrapper = :none
  config.crunch_job_user = 'crunch' # if false, do not set uid when running jobs

  # config.dnsmasq_conf_dir = '/etc/dnsmasq.d'

  # config.compute_node_ami = 'ami-cbca41a2'
  # config.compute_node_ec2run_args = '-g arvados-compute'
  # config.compute_node_spot_bid = 0.11

  # config.compute_node_domain = `hostname --domain`.strip

  # config.compute_node_nameservers = ['1.2.3.4', '1.2.3.5']
  config.compute_node_nameservers = ['192.168.201.3']

  config.uuid_prefix('development@' + `hostname`.strip)

  # Authentication stub: hard code pre-approved API tokens.
  # config.accept_api_token = { rand(2**256).to_s(36) => true }
  config.accept_api_token = {}

  config.new_users_are_active = false
  config.admin_notifier_email_from = 'arvados@example.com'
  config.email_subject_prefix = '[ARVADOS] '
end
